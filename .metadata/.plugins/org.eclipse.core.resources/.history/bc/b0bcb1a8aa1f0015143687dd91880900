package application;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ResourceBundle;

import javafx.util.Duration;
import javafx.application.Platform;
import javafx.beans.property.DoubleProperty;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.ObservableList;
import javafx.concurrent.Worker.State;
import javafx.event.ActionEvent;
import javafx.event.Event;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.ListView;
import javafx.scene.control.SplitPane;
import javafx.scene.control.Tab;
import javafx.scene.control.TabPane;
import javafx.scene.control.TextField;
import javafx.scene.input.MouseButton;
import javafx.scene.input.MouseEvent;
import javafx.scene.web.WebHistory;
import javafx.scene.web.WebView;
import javafx.stage.FileChooser;
import javafx.stage.Window;

public class LayoutController implements Initializable {
	@FXML
	private TextField urlField;
	@FXML
	private TabPane leftTabPane;
	@FXML
	private Tab leftAddTab;
	@FXML
	private TabPane rightTabPane;
	@FXML
	private Tab rightAddTab;
	@FXML
	private ListView<String> leftFavoritebar;
	@FXML
	private SplitPane splitPane;
	
	boolean isLeftPane,isRightPane;
	
	private WebView lastClickWebview;
	
	@FXML
	private void setUrlAction(ActionEvent event) {
		String url = urlField.getText();
		if(url.substring(0,7).equals("http://") == false && url.substring(0,8).equals("https://") == false){
			if(url.substring(0,3).equals("www")){
				url = "http://" + url;
			}else{
				url = "http://www." + url;
			}	
		}
		urlField.setText(url);
		lastClickWebview.getEngine().load(url);
	}
	
	@FXML
	private void backButtonAction(ActionEvent event){
		WebHistory history = lastClickWebview.getEngine().getHistory();
		ObservableList<WebHistory.Entry> entryList=history.getEntries();
	    int currentIndex=history.getCurrentIndex();

	    Platform.runLater(new Runnable() { public void run() { history.go(-1); } });
	    String url = entryList.get(currentIndex>0?currentIndex-1:currentIndex).getUrl();
	    lastClickWebview.getEngine().load(url);
	}
	
	@FXML
	private void nextButtonAction(ActionEvent event){
		final WebHistory history=lastClickWebview.getEngine().getHistory();
	    ObservableList<WebHistory.Entry> entryList=history.getEntries();
	    int currentIndex=history.getCurrentIndex();

	    Platform.runLater(new Runnable() { public void run() { history.go(1); } });
	    String url = entryList.get(currentIndex<entryList.size()-1?currentIndex+1:currentIndex).getUrl();
	    lastClickWebview.getEngine().load(url);
	}
	
	@FXML
	private void reloadButtonAction(ActionEvent event){
		lastClickWebview.getEngine().reload();
	}
	
	@FXML
	private void leftDivideAction(ActionEvent event){
		DoubleProperty dprop = splitPane.getDividers().get(0).positionProperty();
		DoubleTransition dt = new DoubleTransition(Duration.millis(500), dprop);	
		if(isLeftPane == false && isRightPane == false){
			dt.setToValue(1);
			dt.play();
			//splitPane.setDividerPositions(1.0,0.0);
			isLeftPane = true;
		}
		else if((isLeftPane == true && isRightPane == false) || (isLeftPane == false && isRightPane == true)){
			dt.setToValue(.5);
			dt.play();
			//splitPane.setDividerPositions(0.5,0.5);
			isLeftPane = false;
			isRightPane = false;
		}
	}
	
	@FXML
	private void rightDivideAction(ActionEvent event){
		DoubleProperty dprop = splitPane.getDividers().get(0).positionProperty();
		DoubleTransition dt = new DoubleTransition(Duration.millis(500), dprop);	
		if(isLeftPane == false && isRightPane == false){
			dt.setToValue(0);
			dt.play();
			//splitPane.setDividerPositions(0.0,1.0);
			isRightPane = true;
		}
		else if((isLeftPane == true && isRightPane == false) || (isLeftPane == false && isRightPane == true)){
			dt.setToValue(.5);
			dt.play();
			//splitPane.setDividerPositions(0.5,0.5);
			isLeftPane = false;
			isRightPane = false;
		}
		
	}
	
	@FXML
	private void leftTabAddAction(Event event){
		Tab tab = new Tab("");
		WebView web = new WebView();
		//tab.setText("new Tab");
		
		web.getEngine().getLoadWorker().stateProperty().addListener(
		        new ChangeListener<State>() {
		            public void changed(ObservableValue ov, State oldState, State newState) {
		                if (newState == State.SUCCEEDED) {
		                	urlField.setText(web.getEngine().getLocation());
		                	String title = web.getEngine().getTitle();
		                	if (title.length() > 10){
		                		title = title.substring(0,9);
		                	}
		                	tab.setText(title);
		                }
		            }
		        });
		web.getEngine().locationProperty().addListener(new ChangeListener<String>() {

			@Override
			public void changed(ObservableValue<? extends String> observableValue,
					String oldLoc, String newLoc) {
				// TODO Auto-generated method stub
				FileChooser chooser = new FileChooser();
				chooser.setTitle("Save" + newLoc);
				File saveFile = chooser.showSaveDialog(Main.mainScene.getWindow());
				if(saveFile != null){
					BufferedInputStream is = null;
					BufferedOutputStream os = null;
					try{
						is = new BufferedInputStream(new URL(newLoc).openStream());
						os = new BufferedOutputStream(new FileOutputStream(saveFile));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}finally{
						try{if(is != null) is.close();}catch(IOException e){}
						try{if(os != null) os.close();}catch(IOException e){}
					}
					
					
				}
				/*if(newLoc.contains("/download")){
					FileChooser chooser = new FileChooser();
					chooser.setTitle("Save" + newLoc);
				
				}*/
				
			}
			
		});
		web.getEngine().load("http://www.google.co.jp");
		tab.setContent(web);
		leftTabPane.getTabs().add(leftTabPane.getTabs().size()-1,tab);
		leftTabPane.getSelectionModel().select(tab);
		lastClickWebview = (WebView)tab.getContent();
	}
	@FXML
	private void rightTabAddAction(Event event){
		Tab tab = new Tab();
		WebView web = new WebView();
		//tab.setText("new Tab");
		//System.out.println(web.getEngine().getLocation());
		
		web.getEngine().getLoadWorker().stateProperty().addListener(
		        new ChangeListener<State>() {
		            public void changed(ObservableValue ov, State oldState, State newState) {
		                if (newState == State.SUCCEEDED) {
		                	urlField.setText(web.getEngine().getLocation());
		                	String title = web.getEngine().getTitle();
		                	
		                	if (title.length() > 10){
		                		title = title.substring(0,9);
		                	}
		                	tab.setText(title);
		                }
		            }
		        });
		web.getEngine().load("http://www.google.co.jp");
		tab.setContent(web);
		rightTabPane.getTabs().add(rightTabPane.getTabs().size()-1,tab);
		rightTabPane.getSelectionModel().select(tab);
		lastClickWebview = (WebView)tab.getContent();
	}
	
	@FXML
	private void selectTabPane(Event event){
		TabPane tabPane = (TabPane)event.getSource();
		Tab selecttab = tabPane.getSelectionModel().getSelectedItem();
		WebView node = (WebView)selecttab.getContent();
		lastClickWebview = node;
		String url = lastClickWebview.getEngine().getLocation();
		System.out.print(url);
		urlField.setText(url);
	}
	
	@FXML
	private void textFiledEnterAction(ActionEvent event){
		setUrlAction(event);
	}
	
	@FXML
	private void addPageLeft(ActionEvent event){
		Tab selecttab = leftTabPane.getSelectionModel().getSelectedItem();
		WebView view = (WebView)selecttab.getContent();
		String url = view.getEngine().getLocation();
		
		leftFavoritebar.getItems().add(url);
		//System.out.println("add page");
	}
	
	@FXML
	private void leftbarClicked(MouseEvent event){
		if(event.getButton().equals(MouseButton.SECONDARY) == false){
			Tab selecttab = leftTabPane.getSelectionModel().getSelectedItem();
			WebView view = (WebView)selecttab.getContent();
			
			if(leftFavoritebar.getItems().size() != 0) {
				String url = leftFavoritebar.getSelectionModel().getSelectedItem();
				view.getEngine().load(url);
				leftFavoritebar.getSelectionModel().setSelectionMode(null);
			}
		}
	}
	
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// TODO Auto-generated method stub
		isLeftPane = isRightPane = false;
		splitPane.setDividerPositions(0.5,0.5);
		//rightTabPane.getTabs().remove(0);
		//leftTabPane.getTabs().remove(0);
		//leftTabAddAction(null);
		//rightTabAddAction(null);
		//lastClickWebview =	rightWebview;
		System.setProperty("http.proxyHost","proxy.salesio-sp.ac.jp");
	    System.setProperty("http.proxyPort", "7080");
	    

	    
	}
}
